// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id          String   @id @default(cuid())
    firstname   String
    lastname    String?
    username    String   @unique
    email       String   @unique
    avatar      String?  
    password    String   
    isActive    Boolean  @default(false)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    users       ChatUser[]
    stories     Story[]
}

model Chat {
    id          String  @id @default(cuid())
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    users       ChatUser[]

    messages    Message[]
}


model ChatUser {
    id      String  @id @default(cuid())
    chatId  String
    userId  String

    chat    Chat @relation(fields: [chatId], references: [id])
    user    User @relation(fields: [userId], references: [id])
}

model Message {
    id          String  @id @default(cuid())
    content     String?
    senderId    String
    recipientId String
    isSeen      Boolean  @default(false)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    storyId     String?
    shareMediaUrl    String?

    chatId      String
    chat        Chat @relation(fields: [chatId], references: [id])
    story       Story?   @relation(fields: [storyId], references: [id])
}

model Story {
  id          String  @id @default(cuid())
  userId      String

  user        User @relation(fields: [userId], references: [id])
  mediaUrl    String

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  expiresAt   DateTime
  message     Message[]

}